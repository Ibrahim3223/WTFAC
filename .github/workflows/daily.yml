name: Daily Shorts (single channel)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (channel) name"
        required: true
        type: string

jobs:
  build-upload:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    env:
      # --- repo vars (fallbacklarla) ---
      TZ:                ${{ vars.TZ || 'UTC' }}
      CHANNEL_NAME:      ${{ inputs.environment }}
      MODE:              ${{ vars.MODE || 'country_facts' }}
      LANG:              ${{ vars.DEFAULT_LANG || 'en' }}
      VISIBILITY:        ${{ vars.DEFAULT_VISIBILITY || 'public' }}
      TTS_VOICE:         ${{ vars.TTS_VOICE || 'en-US-AriaNeural' }}
      TTS_RATE:          ${{ vars.TTS_RATE || '+10%' }}
      USE_GEMINI:        ${{ vars.USE_GEMINI || '0' }}
      GEMINI_MODEL:      ${{ vars.GEMINI_MODEL || 'gemini-2.5-flash' }}
      GEMINI_PROMPT:     ${{ vars.GEMINI_PROMPT }}
      ROTATION_SEED:     ${{ vars.ROTATION_SEED || '0' }}

      # --- secrets ---
      PEXELS_API_KEY:    ${{ secrets.PEXELS_API_KEY }}
      GEMINI_API_KEY:    ${{ secrets.GEMINI_API_KEY }}
      YT_CLIENT_ID:      ${{ secrets.YT_CLIENT_ID }}
      YT_CLIENT_SECRET:  ${{ secrets.YT_CLIENT_SECRET }}
      YT_REFRESH_TOKEN:  ${{ secrets.YT_REFRESH_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install FFmpeg
        run: sudo apt-get update -y && sudo apt-get install -y ffmpeg

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -q edge-tts google-api-python-client google-auth google-auth-oauthlib requests nest-asyncio pyyaml

      - name: Sanity checks
        run: |
          set -e
          python -V
          ffmpeg -version | head -n 1
          mkdir -p out

      - name: Run generator & upload
        run: python autoshorts_daily.py

      - name: Save video artifact
        if: ${{ always() && hashFiles('out/*.mp4') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.environment }}-last-video
          path: out/*.mp4
          if-no-files-found: ignore
