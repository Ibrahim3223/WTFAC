name: daily

on:
  workflow_dispatch:
    inputs:
      channel:
        description: GitHub Environment adı (kanal adıyla birebir aynı)
        required: true
        type: string

jobs:
  build-upload:
    runs-on: ubuntu-24.04

    # Bu çok önemli: job'ı ilgili Environment üzerinde koşturuyoruz
    environment:
      name: ${{ inputs.channel }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: requirements.txt

      - uses: FedericoCarboni/setup-ffmpeg@v3

      # Environment Variables (vars.*) -> gerçek env
      - name: Export channel variables
        shell: bash
        run: |
          echo "CHANNEL_NAME=${{ inputs.channel }}" >> $GITHUB_ENV
          echo "TOPIC=${{ vars.TOPIC }}" >> $GITHUB_ENV
          echo "LANG=${{ vars.LANG }}" >> $GITHUB_ENV
          echo "MODE=${{ vars.MODE }}" >> $GITHUB_ENV
          echo "ROTATION_SEED=${{ vars.ROTATION_SEED }}" >> $GITHUB_ENV
          echo "SEARCH_TERMS=${{ vars.SEARCH_TERMS }}" >> $GITHUB_ENV
          echo "GEMINI_PROMPT=${{ vars.GEMINI_PROMPT }}" >> $GITHUB_ENV
          echo "TTS_RATE=${{ vars.TTS_RATE }}" >> $GITHUB_ENV
          echo "TTS_VOICE=${{ vars.TTS_VOICE }}" >> $GITHUB_ENV
          echo "VISIBILITY=${{ vars.VISIBILITY }}" >> $GITHUB_ENV

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Run autoshorts
        env:
          # Secrets
          GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}
          PEXELS_API_KEY:   ${{ secrets.PEXELS_API_KEY }}
          YT_CLIENT_ID:     ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}

          # Video / caption ayarları
          UPLOAD_TO_YT: "1"
          REQUIRE_CAPTIONS: "1"
          KARAOKE_CAPTIONS: "1"
          KARAOKE_MODE: "fill"          # fill = kelime-içi dolum (önerilen)
          CAPTIONS_UPPER: "1"           # altyazı tam büyük harf
          KARAOKE_INACTIVE: "#FFD700"   # tüm metin SARI
          KARAOKE_ACTIVE:   "#1E90FF"   # aktif kelime MAVİ (hafif, göze hoş)
          KARAOKE_OUTLINE:  "#000000"   # ince siyah kontur
        run: |
          echo "DEBUG TOPIC=$TOPIC  LANG=$LANG  SEARCH_TERMS=$SEARCH_TERMS"
          python autoshorts_daily.py

      - name: Upload MP4 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.channel }}-short
          path: |
            out/**/*.mp4
            out/*.mp4
          retention-days: 7
