name: Daily Shorts (single channel)

on:
  schedule:
    - cron: "0 6 * * *"   # 06:00 UTC ≈ 09:00 Türkiye
  workflow_dispatch:
    inputs:
      env:
        description: "Environment (channel) name"
        required: true
        default: "WT Facts About Countries"

env:
  TZ: ${{ vars.TZ }}

jobs:
  build-upload:
    runs-on: ubuntu-latest

    # Burada seçtiğin environment'ın (kanalın) secrets/vars'ı bağlanır
    environment:
      name: ${{ inputs.env }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install FFmpeg
        run: sudo apt-get update -y && sudo apt-get install -y ffmpeg

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install edge-tts google-api-python-client google-auth google-auth-oauthlib requests nest-asyncio pyyaml

      - name: Sanity checks
        run: |
          python -V
          ffmpeg -version | head -n 1
          mkdir -p out

      - name: Run generator & upload
        env:
          # --- ENVIRONMENT (channel) SECRETS ---
          PEXELS_API_KEY:   ${{ secrets.PEXELS_API_KEY }}
          GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}
          YT_CLIENT_ID:     ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}

          # --- VARS (environment vars repo vars üzerine yazılır) ---
          USE_GEMINI:        ${{ vars.USE_GEMINI }}
          GEMINI_MODEL:      ${{ vars.GEMINI_MODEL }}
          TTS_VOICE:         ${{ vars.TTS_VOICE }}
          TTS_RATE:          ${{ vars.TTS_RATE }}
          DEFAULT_LANG:      ${{ vars.DEFAULT_LANG }}
          DEFAULT_VISIBILITY:${{ vars.DEFAULT_VISIBILITY }}
          ROTATION_SEED:     ${{ vars.ROTATION_SEED }}
          GEMINI_PROMPT:     ${{ vars.GEMINI_PROMPT }}

          # --- Kanal bilgileri (script bunları okuyor) ---
          CHANNEL_NAME: ${{ inputs.env }}
          MODE:         ${{ vars.MODE }}
          LANG:         ${{ vars.DEFAULT_LANG }}
          VISIBILITY:   ${{ vars.DEFAULT_VISIBILITY }}
        run: python autoshorts_daily.py

      - name: Save video artifact
        if: ${{ always() && hashFiles('out/*.mp4') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.env }}-last-video
          path: out/*.mp4
          if-no-files-found: ignore
